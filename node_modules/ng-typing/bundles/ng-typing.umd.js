(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['ng-typing'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var TypingComponent = /** @class */ (function () {
    function TypingComponent() {
        this.referenceSpeed = 60;
        this.speedDeviation = 30;
        this.typo = true;
        this.typoProbability = 5;
        this.onCompleted = new core.EventEmitter();
        this.chrs = [];
        this.position = 0;
        this.displayedChrs = '';
        this.progress = false;
    }
    /**
     * @return {?}
     */
    TypingComponent.prototype.ngOnInit = function () {
        this.show();
    };
    /**
     * @param {?=} message
     * @return {?}
     */
    TypingComponent.prototype.show = function (message) {
        if (message) {
            this.message = message;
        }
        if (!this.progress && this.message && this.message.trim().length > 0) {
            this.progress = true;
            this.initParameters();
            if (this.referenceSpeed == 0) {
                this.displayedChrs = this.message;
            }
            else {
                this.chrs = this.message.trim().split('');
                setTimeout(this.displayCharacter.bind(this), this.randomSpeed());
            }
        }
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.initParameters = function () {
        this.chrs = [];
        this.position = 0;
        this.displayedChrs = '';
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.displayCharacter = function () {
        if (this.doTypo()) {
            this.displayedChrs += this.getRandomCharacter();
            setTimeout(this.correctTypo.bind(this), TypingComponent.TYPO_FIX_SPEED);
        }
        else {
            this.displayedChrs += this.chrs[this.position++];
            if (this.position == this.chrs.length) {
                this.onCompleted.emit();
                this.progress = false;
            }
            else {
                setTimeout(this.displayCharacter.bind(this), this.randomSpeed());
            }
        }
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.getRandomCharacter = function () {
        return TypingComponent.RANDOM_CHARACTERS
            .charAt(Math.floor(Math.random() * TypingComponent.RANDOM_CHARACTERS.length));
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.correctTypo = function () {
        this.displayedChrs = this.displayedChrs.slice(0, -1);
        setTimeout(this.displayCharacter.bind(this), this.randomSpeed());
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.randomSpeed = function () {
        var /** @type {?} */ deviation = Math.floor(Math.random() * Math.floor(this.speedDeviation));
        var /** @type {?} */ direction = Math.round(Math.random()) == 0 ? 1 : -1;
        return this.referenceSpeed + (deviation * direction);
    };
    /**
     * @return {?}
     */
    TypingComponent.prototype.doTypo = function () {
        if (this.position > 2 && !!this.typo) {
            this.typoProbability = Math.max(Math.min(TypingComponent.MAX_TYPO_PROBABILITY, Math.round(this.typoProbability)), 0);
            return Math.floor(Math.random() * 100) < this.typoProbability;
        }
        return false;
    };
    return TypingComponent;
}());
TypingComponent.MAX_TYPO_PROBABILITY = 80;
TypingComponent.TYPO_FIX_SPEED = 200;
TypingComponent.RANDOM_CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
TypingComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'typing',
                template: "{{displayedChrs}}"
            },] },
];
/** @nocollapse */
TypingComponent.ctorParameters = function () { return []; };
TypingComponent.propDecorators = {
    "message": [{ type: core.Input },],
    "referenceSpeed": [{ type: core.Input },],
    "speedDeviation": [{ type: core.Input },],
    "typo": [{ type: core.Input },],
    "typoProbability": [{ type: core.Input },],
    "onCompleted": [{ type: core.Output, args: ['onCompleted',] },],
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var TypingModule = /** @class */ (function () {
    function TypingModule() {
    }
    return TypingModule;
}());
TypingModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [TypingComponent],
                exports: [TypingComponent]
            },] },
];
/** @nocollapse */
TypingModule.ctorParameters = function () { return []; };

exports.TypingModule = TypingModule;
exports.TypingComponent = TypingComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-typing.umd.js.map
